---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos
  namespace: slurm
---
apiVersion: v1
kind: Secret
metadata:
  name: thanos-token
  namespace: slurm
  annotations:
    kubernetes.io/service-account.name: thanos
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thanos-monitoring-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-monitoring-view
subjects:
  - kind: ServiceAccount
    name: thanos
    namespace: slurm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: thanos-metrics-reader
  namespace: slurm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: thanos-metrics-reader
  namespace: slurm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: thanos-metrics-reader
subjects:
  - kind: ServiceAccount
    name: thanos
    namespace: slurm
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: scale-debug
  namespace: slurm
spec:
  scaleTargetRef:
    apiVersion: slinky.slurm.net/v1alpha1
    kind: NodeSet
    name: slurm-compute-debug
  idleReplicaCount: 0
  minReplicaCount: 1
  maxReplicaCount: 3
  triggers:
    - type: prometheus
      metricType: Value
      metadata:
        serverAddress: https://thanos-querier.openshift-monitoring.svc.cluster.local:9092
        namespace: slurm
        metricName: slurm_partition_max_pending_nodes
        query: slurm_partition_max_pending_nodes{partition="all"}
        threshold: "1"
        authModes: bearer
      authenticationRef:
        name: keda-trigger-auth-prometheus
        kind: TriggerAuthentication
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-prometheus
  namespace: slurm
spec:
  secretTargetRef:
    - parameter: bearerToken
      name: thanos-token
      key: token
    - parameter: ca
      name: thanos-token
      key: ca.crt
